# Generated by roxygen2: do not edit by hand

S3method("$",loo)
S3method("[",loo)
S3method("[[",loo)
S3method(E_loo,default)
S3method(E_loo,matrix)
S3method(ap_psis,array)
S3method(ap_psis,default)
S3method(ap_psis,matrix)
S3method(crps,matrix)
S3method(crps,numeric)
S3method(dim,importance_sampling)
S3method(dim,kfold)
S3method(dim,loo)
S3method(dim,psis_loo)
S3method(dim,waic)
S3method(elpd,array)
S3method(elpd,matrix)
S3method(importance_sampling,array)
S3method(importance_sampling,default)
S3method(importance_sampling,matrix)
S3method(loo,"function")
S3method(loo,array)
S3method(loo,matrix)
S3method(loo_approximate_posterior,"function")
S3method(loo_approximate_posterior,array)
S3method(loo_approximate_posterior,matrix)
S3method(loo_compare,default)
S3method(loo_crps,matrix)
S3method(loo_model_weights,default)
S3method(loo_moment_match,default)
S3method(loo_predictive_metric,matrix)
S3method(loo_scrps,matrix)
S3method(loo_subsample,"function")
S3method(nobs,psis_loo_ss)
S3method(plot,loo)
S3method(plot,psis)
S3method(plot,psis_loo)
S3method(print,compare.loo)
S3method(print,compare.loo_ss)
S3method(print,importance_sampling)
S3method(print,importance_sampling_loo)
S3method(print,loo)
S3method(print,pareto_k_table)
S3method(print,pseudobma_bb_weights)
S3method(print,pseudobma_weights)
S3method(print,psis)
S3method(print,psis_loo)
S3method(print,psis_loo_ap)
S3method(print,stacking_weights)
S3method(print,waic)
S3method(print_dims,importance_sampling)
S3method(print_dims,importance_sampling_loo)
S3method(print_dims,kfold)
S3method(print_dims,psis_loo)
S3method(print_dims,psis_loo_ss)
S3method(print_dims,waic)
S3method(psis,array)
S3method(psis,default)
S3method(psis,matrix)
S3method(relative_eff,"function")
S3method(relative_eff,array)
S3method(relative_eff,default)
S3method(relative_eff,importance_sampling)
S3method(relative_eff,matrix)
S3method(scrps,matrix)
S3method(scrps,numeric)
S3method(sis,array)
S3method(sis,default)
S3method(sis,matrix)
S3method(tis,array)
S3method(tis,default)
S3method(tis,matrix)
S3method(update,psis_loo_ss)
S3method(waic,"function")
S3method(waic,array)
S3method(waic,matrix)
S3method(weights,importance_sampling)
export(.compute_point_estimate)
export(.ndraws)
export(.thin_draws)
export(E_loo)
export(compare)
export(crps)
export(elpd)
export(example_loglik_array)
export(example_loglik_matrix)
export(extract_log_lik)
export(find_model_names)
export(gpdfit)
export(is.kfold)
export(is.loo)
export(is.psis)
export(is.psis_loo)
export(is.sis)
export(is.tis)
export(is.waic)
export(kfold)
export(kfold_split_grouped)
export(kfold_split_random)
export(kfold_split_stratified)
export(loo)
export(loo.array)
export(loo.function)
export(loo.matrix)
export(loo_approximate_posterior)
export(loo_approximate_posterior.array)
export(loo_approximate_posterior.function)
export(loo_approximate_posterior.matrix)
export(loo_compare)
export(loo_crps)
export(loo_i)
export(loo_model_weights)
export(loo_model_weights.default)
export(loo_moment_match)
export(loo_moment_match.default)
export(loo_predictive_metric)
export(loo_scrps)
export(loo_subsample)
export(loo_subsample.function)
export(mcse_loo)
export(nlist)
export(obs_idx)
export(pareto_k_ids)
export(pareto_k_influence_values)
export(pareto_k_table)
export(pareto_k_values)
export(print_dims)
export(pseudobma_weights)
export(psis)
export(psis_n_eff_values)
export(psislw)
export(relative_eff)
export(scrps)
export(sis)
export(stacking_weights)
export(tis)
export(waic)
export(waic.array)
export(waic.function)
export(waic.matrix)
export(weights.importance_sampling)
importFrom(matrixStats,colLogSumExps)
importFrom(matrixStats,colMaxs)
importFrom(matrixStats,colSums2)
importFrom(matrixStats,colVars)
importFrom(matrixStats,logSumExp)
importFrom(parallel,makePSOCKcluster)
importFrom(parallel,mclapply)
importFrom(parallel,parLapply)
importFrom(parallel,stopCluster)
importFrom(stats,constrOptim)
importFrom(stats,nobs)
importFrom(stats,qnorm)
importFrom(stats,quantile)
importFrom(stats,rgamma)
importFrom(stats,rnorm)
importFrom(stats,sd)
importFrom(stats,setNames)
importFrom(stats,update)
importFrom(stats,var)
importFrom(stats,weights)
